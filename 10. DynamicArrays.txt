'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function(inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function() {
    inputString = inputString.split('\n');

    main();
});

function readLine() {
    return inputString[currentLine++];
}


function dynamicArray(n, queries) {
    let sl = {},
      la = 0,
      las = [],
      l = queries.length

  for (let i = 0; i < l; ++i) {
    let [q, x, y] = queries[i],
        si = (x ^ la) % n

    if (q == 1) {
      if (sl[si])
        sl[si].push(y)
      else
        sl[si] = [y]

    } else if (q == 2) {
      la = sl[si][y % sl[si].length]
      las.push(la)
    }
  }

  return las
}

function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const firstMultipleInput = readLine().replace(/\s+$/g, '').split(' ');

    const n = parseInt(firstMultipleInput[0], 10);

    const q = parseInt(firstMultipleInput[1], 10);

    let queries = Array(q);

    for (let i = 0; i < q; i++) {
        queries[i] = readLine().replace(/\s+$/g, '').split(' ').map(queriesTemp => parseInt(queriesTemp, 10));
    }

    const result = dynamicArray(n, queries);

    ws.write(result.join('\n') + '\n');

    ws.end();
}
