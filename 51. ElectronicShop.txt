'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
    inputString += inputStdin;
});

process.stdin.on('end', _ => {
    inputString = inputString.trim().split('\n').map(str => str.trim());

    main();
});

function readLine() {
    return inputString[currentLine++];
}

keyboards = keyboards.sort((a, b) => a - b)
  drives = drives.sort((a, b) => b - a)

  let m = -1,
      i = keyboards.length,
      j = drives.length

  while(i-- > 0) {
    while(j >= 0) {
      let v = keyboards[i] + drives[j]

      if (v > b)
        break
      else if (v > m)
        m = v

      --j
    }
  }

  return m
}

console.log(getMoneySpent([3,1],[5,2,8],10))
console.log(getMoneySpent([4],[5],5))
console.log(getMoneySpent([40,50,60],[5,8,12],60))
console.log(getMoneySpent([1, 2, 8],[3, 5, 8],16))


function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const bnm = readLine().split(' ');

    const b = parseInt(bnm[0], 10);

    const n = parseInt(bnm[1], 10);

    const m = parseInt(bnm[2], 10);

    const keyboards = readLine().split(' ').map(keyboardsTemp => parseInt(keyboardsTemp, 10));

    const drives = readLine().split(' ').map(drivesTemp => parseInt(drivesTemp, 10));

    let moneySpent = getMoneySpent(keyboards, drives, b);

    ws.write(moneySpent + "\n");

    ws.end();
}
