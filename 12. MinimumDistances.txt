'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
    inputString += inputStdin;
});

process.stdin.on('end', _ => {
    inputString = inputString.replace(/\s*$/, '')
        .split('\n')
        .map(str => str.replace(/\s*$/, ''));

    main();
});

function readLine() {
    return inputString[currentLine++];
}

function minimumDistances(a) {

  var dist=0;

    var minDist = Number.MAX_VALUE;

    for(let i = 0; i < a.length-1; i++){

        for(let j = i+1; j < a.length; j++){

            if(a[i] == a[j]){

                dist = Math.abs(i-j);

                minDist = Math.min(dist,minDist);

                break;
            }
        }
    }
    if(minDist == Number.MAX_VALUE){

        return -1;
    }
    return minDist;
}

function main() {
    var n = parseInt(readLine());
    a = readLine().split(' ');
    a = a.map(Number);
    var result = minimumDistances(a);
    process.stdout.write("" + result + "\n");


}

function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const n = parseInt(readLine(), 10);

    const a = readLine().split(' ').map(aTemp => parseInt(aTemp, 10));

    let result = minimumDistances(a);

    ws.write(result + "\n");

    ws.end();
}
